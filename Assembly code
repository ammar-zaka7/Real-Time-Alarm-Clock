ORG 0H

ACALL LCD
LCD:

MOV A, #38H
ACALL COMMWRITE
ACALL DELAY_2
MOV A, #0EH
ACALL COMMWRITE
ACALL DELAY_2
MOV A, #01H
ACALL COMMWRITE
ACALL DELAY_2


ACALL KEYPAD
CJNE A, #2AH, HASH
SJMP STAR
HASH:
CJNE A,#23H,ERROR1
LJMP HASH2

ERROR1:
MOV A,#'e'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'o'
ACALL DATAWRITE													  
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
sjmp $

star:

mov a, #'E'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'N'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'T'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'E'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'R'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #' '
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'T'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'I'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'M'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'E'
ACALL DATAWRITE
ACALL DELAY_2

MOV A,#0C0H
ACALL COMMWRITE
ACALL DELAY_2


ACALL KEYPAD		           //HOURS INPUT 
MOV 30H,A		      

ACALL KEYPAD	              //HOURS INPUT
MOV 31H,A


ACALL KEYPAD                  //MINUTES INPUT
MOV 32H,A

ACALL KEYPAD		          //MINUTES INPUT
MOV 33H,A

MOV A,30H
SWAP A
ADD A,31H
MOV B,#24H
DIV AB                // HOUR VALUE STORED AT 40H
CJNE A,#0,AGAIN22
SJMP MINUTES
AGAIN22:
LJMP ERROR

MINUTES:
MOV A,32H
SWAP A
ADD A,33H
MOV B,#60H
DIV AB
CJNE A,#0,AGAIN23
SJMP STORE
AGAIN23:
LJMP ERROR
STORE:

MOV A,30H
ADD A,#30H
ACALL DATAWRITE
ACALL DELAY_2

MOV A,31H
ADD A,#30H
ACALL DATAWRITE
ACALL DELAY_2

MOV A,#':'
ACALL DATAWRITE
ACALL DELAY_2

MOV A,32H
ADD A,#30H
ACALL DATAWRITE
ACALL DELAY_2

MOV A,33H
ADD A,#30H
ACALL DATAWRITE
ACALL DELAY_2

//ACALL INCREMNT
//
//INCREMENT:
//ACALL delay_11
//ACALL delay_11
//MOV A,36H
//MOV B,#59H
//DIV AB
//CJNE A,#1,JUMP
//HOURS:
//MOV A,35H
//MOV B,#23H
//DIV AB
//CJNE A,#1,JUMP1
//DAYCHANGE:
//MOV A,#0
//MOV 30H,A
//MOV 31H,A
//MOV 32H,A
//MOV 33H,A
//MOV 35H,A
//MOV 36H,A
//
//LJMP STORE
//
//JUMP:
//MOV A,33H
//MOV B,#9H
//DIV AB
//CJNE A,#1,ADDT
//UPPER:
//MOV A,32H
//ADD A,1H
//MOV 33H,#0
//MOV 32H,A
//SWAP A
//ADD A,33H
//MOV 36H,A
//LJMP STORE
//
//ADDT:
//MOV A,33H
//ADD A,1H
//MOV 33H,A
//MOV A,32H
//SWAP A
//ADD A,33H
//MOV 36H,A
//LJMP STORE
//
//
//JUMP1:
//MOV A,31H
//ADD A,1H
//MOV 31H,A
//MOV A,31H
//MOV B,#9
//DIV AB
//CJNE A,#1,baa
//ha:
//mov 
//
//
//MOV 32H,#0
//MOV 33H,#0
//MOV 36H,#0
//MOV 



HASH2:
ACALL KEYPAD
MOV 40H,A

ACALL KEYPAD
MOV 41H,A

ACALL KEYPAD
MOV 42H,A

ACALL KEYPAD
MOV 43H,A

MOV A,40H
SWAP A
ADD A,41H
MOV B,#24H
DIV AB			//hours
CJNE A,#0,AGAIN30
SJMP MINUTES2
AGAIN30:
LJMP ERROR
MINUTES2:
MOV A,42H
SWAP A
ADD A,43H
MOV B,#60H
DIV AB
CJNE A,#0,AGAIN31
SJMP ALARM                        //SJMP STORE1
AGAIN31:
LJMP ERROR
ALARM:	                                //STORE:
                                             //MOV 48H,A //minutes
mov a, #'A'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'L'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'A'
ACALL DATAWRITE
ACALL DELAY_2
mov a, #'R'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'M'
ACALL DATAWRITE
ACALL DELAY_2
mov a, #' '
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'R'
ACALL DATAWRITE
ACALL DELAY_2


mov a, #'I'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'N'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'G'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'I'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'N'
ACALL DATAWRITE
ACALL DELAY_2

mov a, #'G'
ACALL DATAWRITE
ACALL DELAY_2


mov a, #0C0H
ACALL COMMWRITE
ACALL DELAY_2

MOV A,40H
ADD A,#30H
ACALL DATAWRITE
ACALL DELAY_2

MOV A,41H
ADD A,#30H

ACALL DATAWRITE
ACALL DELAY_2

mov a, #':'
ACALL DATAWRITE
ACALL DELAY_2

MOV A,42H
ADD A,#30H

ACALL DATAWRITE
ACALL DELAY_2

 MOV A,43H
ADD A,#30H

ACALL DATAWRITE
ACALL DELAY_2

SJMP $



		      

ERROR:
MOV A,#'e'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
MOV A,#'o'
ACALL DATAWRITE													  
ACALL DELAY_2
MOV A,#'r'
ACALL DATAWRITE
ACALL DELAY_2
sjmp $




ACALL KEYPAD
 
CJNE A,#2AH,HAS
SJMP STAR1
HAS:CJNE A,#23H,ERROR
SJMP HAS2

STAR1:
ACALL KEYPAD		           //HOURS INPUT 
MOV 51H,A		      

ACALL KEYPAD	              //HOURS INPUT
MOV 52H,A


ACALL KEYPAD                  //MINUTES INPUT
MOV 53H,A

ACALL KEYPAD		          //MINUTES INPUT
MOV 54H,A

MOV A,51H
SWAP A
ORL A,52H
MOV 55H,A
MOV B,55H
MOV A,#24
DIV AB                // HOUR VALUE STORED AT 40H
CJNE A,#0,AGA
LJMP ERROR
AGA:
SJMP MIN

MIN:
MOV A,53H
SWAP A
ORL A,54H
MOV 56H,A

MOV B,56H
MOV A,#59
DIV AB
CJNE A,#0,AGA2
LJMP ERROR
AGA2: 
SJMP STORE111
STORE111:
MOV 57H,A

//MOV A,55H
//ANL A,11110000B
//SWAP A
//ADD A,30H
//MOV 58H,A
//MOV A,58H
//ACALL DATAWRITE
//ACALL DELAY
//MOV A,55H
//ANL A,00001111B
//ADD A,30H
//MOV 59H,A
//MOV A,59H
//ACALL DATAWRITE
//ACALL DELAY
//
//MOV A,56H
//ANL A,11110000B
//SWAP A
//ADD A,30H
//MOV 60H,A
//MOV A,60H
//ACALL DATAWRITE
//ACALL DELAY
//MOV A,56H
//ANL A,00001111B
//ADD A,30H
//MOV 61H,A
//MOV A,61H
//ACALL DATAWRITE
//ACALL DELAY

HAS2:
ACALL KEYPAD		           //HOURS INPUT 
MOV 62H,A		      

ACALL KEYPAD	              //HOURS INPUT
MOV 63H,A


ACALL KEYPAD                  //MINUTES INPUT
MOV 64H,A

ACALL KEYPAD		          //MINUTES INPUT
MOV 65H,A

MOV A,62H
SWAP A
ORL A,63H
MOV 66H,A
MOV B,66H
MOV A,#24
DIV AB                // HOUR VALUE STORED AT 40H
CJNE A,#0,AGA12
LJMP ERROR
AGA12:
SJMP MIN1

MIN1:
MOV A,64H
SWAP A
ORL A,65H
MOV 67H,A

MOV B,67H
MOV A,#59
DIV AB
CJNE A,#0,AGA23
LJMP ERROR
AGA23: 
SJMP STORE11
STORE11:
MOV 57H,A

//MOV A,66H
//ANL A,11110000B
//SWAP A
//ADD A,30H
//MOV 37H,A
//MOV A,37H
//ACALL DATAWRITE
//ACALL DELAY
//MOV A,66H
//ANL A,00001111B
//ADD A,30H
//MOV 38H,A
//MOV A,38H
//ACALL DATAWRITE
//ACALL DELAY
//
//MOV A,67H
//ANL A,11110000B
//SWAP A
//ADD A,30H
//MOV 39H,A
//MOV A,39H
//ACALL DATAWRITE
//ACALL DELAY
//MOV A,67H
//ANL A,00001111B
//ADD A,69H
//MOV 61H,A
//MOV A,61H
//ACALL DATAWRITE
//ACALL DELAY







COMMWRITE:
MOV P0, A
CLR P3.6
SETB P3.7
ACALL DELAY_2
CLR P3.7												  	
RET	
DATAWRITE:
MOV P0, A
SETB P3.6
SETB P3.7
ACALL DELAY_2
CLR P3.7
DELAY_2:
MOV 50H, #50
HERE2:MOV 51H, #255
HERE:DJNZ 51H, HERE
DJNZ 50H, HERE2
RET



KEYPAD:
MOV P2, #0xFF
K1:
	MOV	P1, #0
	MOV A , P2
	ANL A, #00000111B
	CJNE A, #00000111B, K1

K2: ACALL DELAY2 
	MOV A, P2
	ANL A, #00000111B
	CJNE A, #00000111B, OVER
	SJMP K2

OVER:
	ACALL DELAY2
	MOV A, P2
	ANL A, #00000111B
	CJNE A, #00000111B, OVER1
	SJMP K2
	
OVER1:
	MOV P1, #11111110B
	MOV A, P2
	ANL A, #00000111B
	CJNE A, #00000111B, ROW_0
	
	MOV P1, #11111101B
	MOV A, P2
	ANL A, #00000111B
	CJNE A, #00000111B, ROW_1
	
	 MOV P1, #11111011B
	 MOV A, P2
	 ANL A, #00000111B
	 CJNE A, #00000111B, ROW_2
	
	 MOV P1, #11110111B
	 MOV A, P2
	 ANL A, #00000111B
	 CJNE A, #00000111B, ROW_3
	
	LJMP K2
	
ROW_0: MOV DPTR, #KCODE0
SJMP FIND
ROW_1: MOV DPTR, #KCODE1
SJMP FIND
	
ROW_2: MOV DPTR, #KCODE2
SJMP FIND
	
ROW_3: MOV DPTR, #KCODE3
SJMP FIND
FIND: RRC A
JNC MATCH
INC DPTR
SJMP FIND

MATCH: CLR A
       MOVC A,@A+DPTR
	   RET
	   
	 
ORG 300H
KCODE0: DB 1,2,3
KCODE1: DB 4,5,6
KCODE2: DB 7,8,9
KCODE3: DB '*',0,'#'
	
	


Delay2: Mov R4, #100
L11: Mov R5, #5
L22: Djnz R5, L22
Djnz R4, L11 
Ret 

END



